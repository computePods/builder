#!/usr/bin/env python

# This Python script turns off a ComputePod's restricted rsync access
# to/from specific directories for a given user.

#########################################################################
# Initial configuration:

# The following line is (re)created by the ComputePods build tool
#
cpPublicRsyncTag = "{{ rsync['name'] }}"

#########################################################################

import datetime
import os
import sys
import urllib.request

# Set some computed variables and paths
#
homeDir     = os.path.expanduser('~')
rrsyncCmd   = os.path.join(homeDir, '.ssh', 'rrsync')
rrsyncLog   = rrsyncCmd+'.log'
authKeyPath = os.path.join(homeDir, '.ssh', 'authorized_keys')

# Remove the rrsync and rrsync.log files
#
try : os.remove(rrsyncCmd)
except : pass

try : os.remove(rrsyncLog)
except : pass

# Get the current authorized_keys file contents (as an array of lines)
#
authKeys = None
try :
  with open(authKeyPath, 'r') as authKeyFile :
    authKeys = authKeyFile.readlines()
except :
  pass

if authKeys is None :
  print(f"Could not open the ssh authorized_keys file ({authKeyPath})")
  sys.exit(-1)

# Copy all the non-rrsync keys to a new list of keys
#
newAuthKeys = []
for aKey in authKeys :
  aKey = aKey.strip()
  if not aKey.endswith(cpPublicRsyncTag) :
    newAuthKeys.append(aKey)

# Backup the existing authorized_keys file
#
timeNow = datetime.datetime.now().strftime("%Y.%m.%d-%H.%M.%S")
os.rename(authKeyPath, authKeyPath+'_cpBackup_'+timeNow)

# Save the new authorized_keys file
#
with open(authKeyPath, "w") as authKeyFile :
  authKeyFile.write("\n".join(newAuthKeys))
